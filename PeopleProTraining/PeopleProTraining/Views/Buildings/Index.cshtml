@using PeopleProTraining.Models
@model IEnumerable<Building>


@{
    ViewBag.Title = "Index";
    Building newBuilding = new Building();
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.address)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.address)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
        </td>
    </tr>
}

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <tr>
            <td>
            Name: 
            @Html.TextBox("name")
            @Html.ValidationMessageFor(model => newBuilding.name, "", new { @class = "text-danger" }) 
            </td>
        </tr>
        <tr>
            <td>
            Number: 
            @Html.TextBox("number")
            @Html.ValidationMessageFor(model => newBuilding.number, "",new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
            Address:
            @Html.TextBox("address")
            @Html.ValidationMessageFor(model => newBuilding.number, "", new {@class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
               <input type="submit" value="Append" class="btn btn-default" onclick="postBuilding();" />
            </td>
        </tr>

        

    
    }
</table>
